<?php
// api/raid/join.php
declare(strict_types=1);
require_once __DIR__ . '/../helpers.php';
cors();

/**
 * ‡∏™‡πà‡∏á Expo Push Notification ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÜ
 */
function sendExpoPush(string $to, string $title, string $body, array $data = []): bool
{
  if ($to === '') return false;

  $payload = json_encode([
    'to'    => $to,
    'title' => $title,
    'body'  => $body,
    'sound' => 'default',
    'data'  => $data,
  ], JSON_UNESCAPED_UNICODE);

  $ch = curl_init('https://exp.host/--/api/v2/push/send');
  curl_setopt_array($ch, [
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_POST           => true,
    CURLOPT_HTTPHEADER     => [
      'Content-Type: application/json',
      'Accept: application/json',
    ],
    CURLOPT_POSTFIELDS     => $payload,
    CURLOPT_TIMEOUT        => 10,
  ]);

  $res  = curl_exec($ch);
  $err  = curl_error($ch);
  $code = (int)curl_getinfo($ch, CURLINFO_HTTP_CODE);
  curl_close($ch);

  if ($err || $code >= 400) return false;

  // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ parse $res ‡πÑ‡∏î‡πâ
  // $json = json_decode((string)$res, true);
  // return ($json['data']['status'] ?? null) === 'ok';

  return true; // ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ñ‡πâ‡∏≤ HTTP 2xx ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ error
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
  jsonResponse(false, null, 'Method not allowed', 405);
}

$userId = authGuard();
$input = getJsonInput();
$roomId = (int)($input['room_id'] ?? 0);
if ($roomId <= 0) {
  jsonResponse(false, null, 'room_id ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', 422);
}

$db = pdo();

try {
  $db->beginTransaction();

  // üîí ‡∏•‡πá‡∏≠‡∏Ñ‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡∏Å‡∏±‡∏ô‡πÅ‡∏Ç‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏ó‡∏£‡∏Å
  $stmt = $db->prepare("
    SELECT id, status, start_time, max_members, owner_id
    FROM raid_rooms
    WHERE id = :id
    FOR UPDATE
  ");
  $stmt->execute([':id' => $roomId]);
  $room = $stmt->fetch();

  if (!$room) {
    $db->rollBack();
    jsonResponse(false, null, '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á', 404);
  }

  if ($room['status'] !== 'active') {
    $db->rollBack();
    jsonResponse(false, null, '‡∏´‡∏±‡∏ß‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏´‡πâ‡∏≠‡∏á ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÑ‡∏î‡πâ', 409);
  }

  if (strtotime($room['start_time']) <= time()) {
    $db->rollBack();
    jsonResponse(false, null, '‡πÄ‡∏•‡∏¢‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß', 409);
  }

  // ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß?
  $stmt = $db->prepare("SELECT COUNT(*) FROM user_raid_rooms WHERE room_id = :r AND user_id = :u");
  $stmt->execute([':r' => $roomId, ':u' => $userId]);
  if ((int)$stmt->fetchColumn() > 0) {
    $db->rollBack();
    jsonResponse(false, null, '‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß', 409);
  }

  // ‡∏ô‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  $stmt = $db->prepare("SELECT COUNT(*) FROM user_raid_rooms WHERE room_id = :r");
  $stmt->execute([':r' => $roomId]);
  $current = (int)$stmt->fetchColumn();

  if ($current >= (int)$room['max_members']) {
    $db->rollBack();
    jsonResponse(false, null, '‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß', 409);
  }

  // ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
  $stmt = $db->prepare("
    INSERT INTO user_raid_rooms (room_id, user_id, role, joined_at)
    VALUES (:r, :u, 'member', :t)
  ");
  $stmt->execute([':r' => $roomId, ':u' => $userId, ':t' => now()]);

  // ‚úÖ ‡∏õ‡∏¥‡∏î‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Å‡πà‡∏≠‡∏ô ‡∏Ñ‡πà‡∏≠‡∏¢‡∏¢‡∏¥‡∏á Push
  $db->commit();

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  // üîî ‡∏™‡πà‡∏á Notification ‡πÑ‡∏õ‡∏´‡∏≤ "‡∏´‡∏±‡∏ß‡∏´‡πâ‡∏≠‡∏á"
  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

  // ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà join ‡∏Ñ‡∏∑‡∏≠‡∏´‡∏±‡∏ß‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏≠‡∏á (‡∏Å‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á)
  $ownerId = (int)$room['owner_id'];
  if ($ownerId > 0 && $ownerId !== (int)$userId) {
    try {
      // ‡∏î‡∏∂‡∏á token ‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡∏´‡πâ‡∏≠‡∏á
      $stmt = $db->prepare("SELECT device_token, username FROM users WHERE id = :id LIMIT 1");
      $stmt->execute([':id' => $ownerId]);
      $owner = $stmt->fetch();

      // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
      $stmt = $db->prepare("SELECT username FROM users WHERE id = :id LIMIT 1");
      $stmt->execute([':id' => $userId]);
      $joiner = $stmt->fetch();

      // ‡∏ô‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á x/y)
      $stmt = $db->prepare("SELECT COUNT(*) FROM user_raid_rooms WHERE room_id = :r");
      $stmt->execute([':r' => $roomId]);
      $countAfter = (int)$stmt->fetchColumn();

      $max = (int)$room['max_members'];
      $ownerToken = (string)($owner['device_token'] ?? '');
      $joinerName = (string)($joiner['username'] ?? '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà');

      if ($ownerToken !== '') {
        $title = '‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á';
        $body  = "{$joinerName} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÅ‡∏•‡πâ‡∏ß (‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å {$countAfter}/{$max})";
        $data  = [
          'type'     => 'raid_member_join',
          'room_id'  => $roomId,
          'user_id'  => (int)$userId,
          'owner_id' => $ownerId,
          // ‡πÉ‡∏™‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô route ‡πÉ‡∏ô‡πÅ‡∏≠‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
        ];

        // ‡∏¢‡∏¥‡∏á push (‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ flow ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏´‡∏≤‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
        @sendExpoPush($ownerToken, $title, $body, $data);
      }
    } catch (\Throwable $e) {
      // ‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡πÑ‡∏ß‡πâ ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏Å
      // ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ log ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÑ‡∏î‡πâ
    }
  }

  // ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
  jsonResponse(true, ['room_id' => $roomId], '‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 201);

} catch (Throwable $e) {
  if ($db->inTransaction()) $db->rollBack();
  jsonResponse(false, null, '‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß', 500);
}
