<?php
// api/friend/add.php
declare(strict_types=1);

require_once __DIR__ . '/../helpers.php'; // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠: authGuard(), jsonResponse(), pdo(), getJsonInput(), cors()
cors(); // ‡πÄ‡∏õ‡∏¥‡∏î CORS ‡πÉ‡∏´‡πâ frontend ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏î‡πâ

// ---------------------------------------------------------------------
// 0) ‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏ò‡∏≠‡∏î POST ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
// ---------------------------------------------------------------------
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
  jsonResponse(false, null, 'Method not allowed', 405);
}

// ---------------------------------------------------------------------
// 1) ‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å JWT ‡πÅ‡∏•‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï JSON
// ---------------------------------------------------------------------
$userId = authGuard();        // ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô (requester)
$input  = getJsonInput();     // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡πÉ‡∏ô body

// ---------------------------------------------------------------------
// 2) ‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏≤‡∏Å Body ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
// ---------------------------------------------------------------------
$targetId = (int)($input['target_id'] ?? 0);   // ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô

if ($targetId <= 0) {
  jsonResponse(false, null, 'target_id ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á', 422);
}
if ($targetId === $userId) {
  jsonResponse(false, null, '‡∏´‡πâ‡∏≤‡∏°‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á', 422);
}

// ---------------------------------------------------------------------
// 3) ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
// ---------------------------------------------------------------------
$db = pdo();

// ---------------------------------------------------------------------
// üéØ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢: ‡∏™‡πà‡∏á Expo Push + (‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô) ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á notifications
// ---------------------------------------------------------------------

/**
 * ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Expo Push
 * @param string $expoToken  ExponentPushToken[...] ‡∏Ç‡∏≠‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
 * @param string $title      ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
 * @param string $message    ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
 * @param array  $data       ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡∏¥‡∏° (‡∏Å‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏û‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏î‡πâ)
 * @return bool              ‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ)
 */
function sendExpoPush(string $expoToken, string $title, string $message, array $data = []): bool
{
  // Endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Expo Push
  $url = 'https://exp.host/--/api/v2/push/send';

  $payload = [
    'to'    => $expoToken,
    'title' => $title,
    'body'  => $message,
    'sound' => 'default',
    'data'  => $data,
  ];

  $ch = curl_init($url);
  curl_setopt_array($ch, [
    CURLOPT_POST           => true,
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_HTTPHEADER     => [
      'Content-Type: application/json',
      // 'Authorization: Bearer <YOUR_EXPO_ACCESS_TOKEN>' // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ token ‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°
    ],
    CURLOPT_POSTFIELDS     => json_encode($payload, JSON_UNESCAPED_UNICODE),
    CURLOPT_TIMEOUT        => 10,
  ]);

  $resp = curl_exec($ch);
  $err  = curl_error($ch);
  $code = (int)curl_getinfo($ch, CURLINFO_HTTP_CODE);
  curl_close($ch);

  // ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ 200 ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ (‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢)
  if ($err) return false;
  return $code >= 200 && $code < 300;
}

/**
 * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡∏á DB (‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô)
 * ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
 * CREATE TABLE notifications (
 *   id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
 *   user_id BIGINT UNSIGNED NOT NULL,
 *   type VARCHAR(50) NOT NULL,        -- ‡πÄ‡∏ä‡πà‡∏ô 'friend_request'
 *   title VARCHAR(100) NOT NULL,
 *   message VARCHAR(255) NOT NULL,
 *   data JSON NULL,                   -- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö deep link
 *   is_read TINYINT(1) NOT NULL DEFAULT 0,
 *   created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
 *   KEY idx_user (user_id),
 *   CONSTRAINT fk_notif_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
 * ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
 */
function createInAppNotification(PDO $db, int $userId, string $type, string $title, string $message, array $data = []): void
{
  try {
    $stmt = $db->prepare("
      INSERT INTO notifications (user_id, type, title, message, data)
      VALUES (:uid, :type, :title, :msg, :data)
    ");
    $stmt->execute([
      ':uid'   => $userId,
      ':type'  => $type,
      ':title' => $title,
      ':msg'   => $message,
      ':data'  => json_encode($data, JSON_UNESCAPED_UNICODE),
    ]);
  } catch (Throwable $e) {
    // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á fail API ‡πÅ‡∏Ñ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏µ‡∏¢‡∏ö ‡πÜ
  }
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô high-level: ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô "‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà"
 * - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• username ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
 * - ‡∏î‡∏∂‡∏á device_token ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠ ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á Expo Push
 * - (‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô) ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà notifications table
 */
function notifyFriendRequest(PDO $db, int $fromUserId, int $toUserId): void
{
  // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á + token ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
  $q = $db->prepare("
    SELECT 
      u_from.username AS from_name,
      u_to.device_token AS expo_token
    FROM users u_from
    JOIN users u_to ON u_to.id = :toId
    WHERE u_from.id = :fromId
    LIMIT 1
  ");
  $q->execute([':fromId' => $fromUserId, ':toId' => $toUserId]);
  $u = $q->fetch();

  $fromName  = $u['from_name']  ?? '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà';
  $expoToken = $u['expo_token'] ?? null;

  // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
  $title   = '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà';
  $message = "{$fromName} ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì";

  // deep link ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏û‡∏≤‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô"
  // (‡πÅ‡∏Å‡πâ schema ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÅ‡∏≠‡∏õ‡∏Ñ‡∏∏‡∏ì ‡πÄ‡∏ä‡πà‡∏ô pogopartyth://friends/requests)
  $data = [
    'type'      => 'friend_request',
    'from_id'   => $fromUserId,
    'deeplink'  => 'pogopartyth://friends/requests'
  ];

  // ‡∏™‡πà‡∏á Expo Push (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ token)
  if (!empty($expoToken)) {
    sendExpoPush($expoToken, $title, $message, $data);
  }

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö in-app ‡πÑ‡∏ß‡πâ‡∏î‡∏π‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
  createInAppNotification($db, $toUserId, 'friend_request', $title, $message, $data);
}

try {
  // -------------------------------------------------------------------
  // 4) ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏´‡∏° (‡∏î‡∏∂‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ)
  // -------------------------------------------------------------------
  $q = $db->prepare("
    SELECT id, requester_id, addressee_id, status
    FROM friendships
    WHERE (requester_id = :me AND addressee_id = :target)
       OR (requester_id = :target AND addressee_id = :me)
    LIMIT 1
  ");
  $q->execute([':me' => $userId, ':target' => $targetId]);
  $exist = $q->fetch();

  if ($exist) {
    // ‡∏Å‡∏£‡∏ì‡∏µ: ‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß
    if ($exist['status'] === 'accepted') {
      jsonResponse(false, null, '‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß', 409);
    }
    // ‡∏Å‡∏£‡∏ì‡∏µ: ‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà (pending)
    if ($exist['status'] === 'pending') {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏Ç‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
      if ((int)$exist['requester_id'] === $userId) {
        jsonResponse(false, null, '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß', 409);
      } else {
        // ‡∏≠‡∏µ‡∏Å‡∏ù‡πà‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏ö‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏ô
        jsonResponse(false, null, '‡∏≠‡∏µ‡∏Å‡∏ù‡πà‡∏≤‡∏¢‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö', 409);
      }
    }

    // ‡∏Å‡∏£‡∏ì‡∏µ: ‡πÄ‡∏Ñ‡∏¢‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò (declined) ‚Üí ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô pending ‡πÉ‡∏´‡∏°‡πà
    if ($exist['status'] === 'declined') {
      $upd = $db->prepare("
        UPDATE friendships
        SET requester_id = :me,
            addressee_id = :target,
            status = 'pending',
            created_at = CURRENT_TIMESTAMP,
            updated_at = NULL
        WHERE id = :id
      ");
      $upd->execute([
        ':me'     => $userId,
        ':target' => $targetId,
        ':id'     => $exist['id']
      ]);

      // üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠ (target) ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏´‡∏°‡πà/‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
      notifyFriendRequest($db, $userId, $targetId);

      jsonResponse(true, null, '‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
  }

  // -------------------------------------------------------------------
  // 5) ‡πÅ‡∏ó‡∏£‡∏Å‡πÅ‡∏ñ‡∏ß‡πÉ‡∏´‡∏°‡πà (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå)
  // -------------------------------------------------------------------
  $ins = $db->prepare("
    INSERT INTO friendships (requester_id, addressee_id, status)
    VALUES (:me, :target, 'pending')
  ");
  $ins->execute([':me' => $userId, ':target' => $targetId]);

  // üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠ (target) ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
  notifyFriendRequest($db, $userId, $targetId);

  jsonResponse(true, null, '‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
} catch (Throwable $e) {
  // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏µ‡∏ö‡∏±‡∏Å)
  jsonResponse(false, null, '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' . $e->getMessage(), 500);
}
